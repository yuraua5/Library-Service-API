version: "3"

services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./:/code
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8080"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    env_file:
      - .env

  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A Library_Service_API worker -l INFO
    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A Library_Service_API beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env